; Auto-generated. Do not edit!


(cl:in-package bwi_msgs-msg)


;//! \htmlinclude LogicalNavResult.msg.html

(cl:defclass <LogicalNavResult> (roslisp-msg-protocol:ros-message)
  ((success
    :reader success
    :initarg :success
    :type cl:boolean
    :initform cl:nil)
   (observations
    :reader observations
    :initarg :observations
    :type bwi_msgs-msg:LogicalNavigationState
    :initform (cl:make-instance 'bwi_msgs-msg:LogicalNavigationState)))
)

(cl:defclass LogicalNavResult (<LogicalNavResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <LogicalNavResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'LogicalNavResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name bwi_msgs-msg:<LogicalNavResult> is deprecated: use bwi_msgs-msg:LogicalNavResult instead.")))

(cl:ensure-generic-function 'success-val :lambda-list '(m))
(cl:defmethod success-val ((m <LogicalNavResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bwi_msgs-msg:success-val is deprecated.  Use bwi_msgs-msg:success instead.")
  (success m))

(cl:ensure-generic-function 'observations-val :lambda-list '(m))
(cl:defmethod observations-val ((m <LogicalNavResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bwi_msgs-msg:observations-val is deprecated.  Use bwi_msgs-msg:observations instead.")
  (observations m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <LogicalNavResult>) ostream)
  "Serializes a message object of type '<LogicalNavResult>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:if (cl:slot-value msg 'success) 1 0)) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'observations) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <LogicalNavResult>) istream)
  "Deserializes a message object of type '<LogicalNavResult>"
    (cl:setf (cl:slot-value msg 'success) (cl:not (cl:zerop (cl:read-byte istream))))
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'observations) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<LogicalNavResult>)))
  "Returns string type for a message object of type '<LogicalNavResult>"
  "bwi_msgs/LogicalNavResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'LogicalNavResult)))
  "Returns string type for a message object of type 'LogicalNavResult"
  "bwi_msgs/LogicalNavResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<LogicalNavResult>)))
  "Returns md5sum for a message object of type '<LogicalNavResult>"
  "3fc464e1bc364c43cb74429554f6935d")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'LogicalNavResult)))
  "Returns md5sum for a message object of type 'LogicalNavResult"
  "3fc464e1bc364c43cb74429554f6935d")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<LogicalNavResult>)))
  "Returns full string definition for message of type '<LogicalNavResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%bool success~%LogicalNavigationState observations~%~%================================================================================~%MSG: bwi_msgs/LogicalNavigationState~%string room~%string[] nearby_locations~%bool[] facing~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'LogicalNavResult)))
  "Returns full string definition for message of type 'LogicalNavResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%bool success~%LogicalNavigationState observations~%~%================================================================================~%MSG: bwi_msgs/LogicalNavigationState~%string room~%string[] nearby_locations~%bool[] facing~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <LogicalNavResult>))
  (cl:+ 0
     1
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'observations))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <LogicalNavResult>))
  "Converts a ROS message object to a list"
  (cl:list 'LogicalNavResult
    (cl:cons ':success (success msg))
    (cl:cons ':observations (observations msg))
))
